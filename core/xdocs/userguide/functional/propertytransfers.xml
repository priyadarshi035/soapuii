<?xml version="1.0"?>
<document>
    <properties>
        <title>Parameters in Web Service Testing- soapUI properties property transfers</title>
    </properties>
    <body>
		<section name="Property Transfers">
		  <columns><column><div>
		Property Transfers are TestSteps that transfer properties between Property Containers within the same scope as the
		PropertyTransfer TestStep (ie its containing TestCase, TestSuite, Project and Goal Properties). 
		The step can contain an arbitrary number of "transfers" specifying a source and destination property with optional 
		XPath/XQuery expressions. 
		 <p>Property Transfers use the same Saxon XPath/XQuery engine as described for the XPath/XQuery Assertion.</p>
		 </div></column><column>
			<img src="images/propertytransfer_teststep.gif" border="0" alt="Moving Paramters in tests - Property Transfer Step in soapUI"/>
		</column></columns>
			
		 <subsection name="The PropertyTransfer Editor">
		 <p>The Property Transfer editor is opened by double clicking a PropertyTransfer step either in the 
		 navigator or  in the TestCase editors' TestStep list.</p>
		 <p>The editor contains a list of configured transfers to the left, selecting 
		 a transfer in the list will display that transfers source and destination XPath/XQuery 
		 expressions to the right.</p>
		 <p>Use the top right ComboBoxes to specify the source or property to be transferred, the target or property 
		 is specified with the combo boxes in the middle. If the properties contain XML an accompanying 
		 XPath expression can be specified to further select the value to transfer from or moving to. soapUI Pro adds an 
		 <a href="../xpath_selector.html">XPath Selector for GUI XPath Creaction</a> button to the right of these combo boxes for
		 easily selecting the source or target XPath expression from the selected source or target property. 
		 </p>

		 <p align="center"><img src="images/propertytransfer_editor.gif" alt="Moving Paramters in tests - Property Transfer editor in soapUI"/></p>
		
		 <p>The following actions are available from the top toolbar</p>
		 <ul>
		 	<li><b>Add</b> : prompts to add a new transfer to the list</li>
		 	<li><b>Delete</b> : prompts to delete the selected transfer</li>
		 	<li><b>Copy</b> : prompts to create a copy of the selected transfer</li>
		 	<li><b>Rename</b> : prompts to rename the selected transfer</li>
		 	<li><b>Run</b> : runs the selected transfer, i.e. transfers its value as configured specified. 
		 	For this to work properly the source and target properties must be available (for example a 
		 	TestRequest response).</li>
		 	<li><b>Run All</b> : runs all the transfers, i.e. transfers the values specified. For this to work 
		 	properly the source	and target properties must be available (for example a TestRequest response).</li>
		 	<li><b>Declare</b> : declares namespaces in both the source and destination XPath fields. Namespaces in the 
		 	source field are extracted from the selected TestRequests current response message, namespaces
		 	in the target field are extracted from the subsequent TestRequests request message. If either of these are not
		 	available, soapUI will prompt to define all namespaces available in the associated schemas.</li>
		 	
		 	 <li><b>Online Help</b> - Displays this page in an external browser</li>
		 </ul>
		 
		 <p>A "Transfer Log" inspector at the bottom of the editor displays all transfers performed by this
		 PropertyTransfer while the editor has been open, including both those performed using one of the 
		 toolbar buttons and those performed during a TestCase/TestSuite run. The Transfer Logs toolbar contains
		 a "Clear" button to clear its current contents.</p>
		 </subsection>
		 
		 <subsection name="Transfer Execution">	
			
		 <p>Upon execution during a TestCase run, each transfer in the Property Transfer is performed 
		 by selecting the property specified by the transfers source step, property and optional XPath expression 
		 and copying their value(s) to the destination steps specified property using an optional XPath expression.</p>
		 
		 <p>If XPath expressions are specified, soapUI will try to replace the target node with the source node if 
		 they are of the same type. If not (for example when assigning text() to an @attribute), soapUI will do its
		 best to copy the value as possible.</p>
		 
		  <p>Source and target XPath expressions must both point to <i>existing nodes</i> in their respective
		 properties, the source property obviously requires the node so it can be selected, the target property 
		 requires the node so it can be found and overwritten.</p>
		 
		 <p>If any of the transfers fail due to missing matches of any of the XPath expression, an error is printed and
		 the step will either fail or go on, depending on of the "fail on error" option has been selected for 
		 that transfer. TestCase execution is only aborted if the TestCases' "Fail on error" option has been set 
		 as described for under <a href="testcases.html#TestCase_Options">TestCase Options</a>.</p>
		 
		 <p>The following options are available for each transfer:</p>
		 <ul>
		 <li><b>Fail transfer on error</b> - Fails the property-transfer if an error occurs (for example a missing 
		 source property)</li>
		 <li><b>Set null on missing source</b> - Overrides errors for missing source values and sets the target property
		 to null in these cases</li>
		 <li><b>Transfer text content</b> - When the XPath expression point at element nodes, their text content 
		 is transferred instead of the elements themselves (required for backward compatibility with soapUI 1.5)</li> 
		 <li><b>Ignore empty/missing values</b> - Overrides errors for missing source values and just ignores corresponding
		 transfers</li>
		 <li><b>Transfer to all</b> - If the target XPath expression selects multiple nodes, the source property 
		 value will be set in all these nodes instead of only the first one.</li>
		 <li><b>Use XQuery</b> - interprets the specified source XPath expression as an XQuery expression instead, 
		 allowing for transfers of complex/transformed data instead of just "plain" copying</li>
		 </ul>
		 
		</subsection>	
		 
		 
		 <subsection name="Working with Property Transfers">
		 <p>A Property Transfer can be created as follows:</p>
		 <ol>
		 	<li>Begin by creating the two TestSteps that the PropertyTransfer should transfer between.</li>
		 	<li>Create the PropertyTransfer and first add a transfer in the configuration dialog using the 
		 	<b>Add</b> button</li>
		 	<li>Select the source and target TestStep and property in their respective combo-boxes</li>
		 	<li>If any of the properties contains XML, proceed by defining namespaces in the XPath expressions using 
		 	the <b>Define</b> button, then add the actual XPath expressions that specify what to select and where to 
		 	copy it. In the screenshot above both expressions are <code>//ns1:SessionId</code> which will result in the sessionID element being copied
		 	from the preceding response to the following request (where it must be available but preferably empty)</li>
		 	<li>Test the transfer(s) by selecting the <b>Run</b> button and check the following request message that the
		 	values have been copies correctly. Any errors will be shown either in the main soapUI log (at the bottom)
		 	or in a designated popup</li>
		 	<li>Repeat steps 3-5 for each transfer added to the ValueTransfer</li>
		 </ol>
		 <p>with soapUI Pro creating property transfers is greatly simplified using the corresponding 
		 <a href="response-wizards.html">Response Wizards</a> which perform most of the above steps automatically.
		 </p>
		 </subsection>
		 <subsection name="PropertyTransfer Example">
		 <p>The following sample is also included in the sample project included in the offline distribution:</p>
		 <p>Set up 2 requests to the Amazon Web Service defined at  (http://webservices.amazon.com/AWSECommerceService/AWSECommerceService.wsdl);</p>
		 <source><![CDATA[<soapenv:Envelope xmlns:ns="http://webservices.amazon.com/AWSECommerceService/2006-02-15" 
	xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
  <soapenv:Body>
     <ns:ItemSearch>
        <ns:SubscriptionId>- your subscription id here-</ns:SubscriptionId>
        <ns:Request>
           <ns:SearchIndex>Books</ns:SearchIndex>
           <ns:Title>Oxford</ns:Title>
        </ns:Request>
     </ns:ItemSearch>
  </soapenv:Body>
</soapenv:Envelope>]]></source>
		<p>and</p>
		<source><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns:ns="http://webservices.amazon.com/AWSECommerceService/2006-02-15">
  <soapenv:Body>
     <ns:ItemSearch>
        <ns:SubscriptionId>- your subscription id here -</ns:SubscriptionId>
        <ns:Request>
           <ns:Author>?</ns:Author>
       <ns:SearchIndex>Books</ns:SearchIndex>
        </ns:Request>
     </ns:ItemSearch>
  </soapenv:Body>
</soapenv:Envelope>]]></source>
		<p>and then create the following transfer which moves the first author from the 
		first requests "response" property to the <code>author</code> request element in the following steps "request"
		property;</p>
		<p>Source XPath:</p>
		<source>declare namespace ns='http://webservices.amazon.com/AWSECommerceService/2006-02-15';
(//ns:Author)[1]</source>
		<p>Target XPath:</p>
		<source>declare namespace ns='http://webservices.amazon.com/AWSECommerceService/2006-02-15';
(//ns:Author)[1]</source>
		 
		 </subsection>
		 
		 <p><hr size="1"/>Next: <a href="gotostep.html">Web Service Testing - Conditional Goto Steps</a></p>
		</section>
    </body>
</document>

