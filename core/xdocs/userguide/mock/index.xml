<?xml version="1.0"?>
<document>
    <properties>
        <title>Web Service Simulation - Web Service Mocking</title>
    </properties>
    <body>
		<section name="Web Service Mocking">
		<columns><column><div>
		In soapUI 1.7 we introduced the possibility to create Mock Implementations, or Web Service Simulations, (called "MockServices") of any 
		Web Service from its WSDL contract. A soapUI <a href="services.html">MockService</a> can expose an arbitrary 
		number of operations ("<a href="operations.html">MockOperations</a>")
		from different WSDLs which	can further be configured quite extensively in regard to which response(s) 
		("<a href="responses.html">MockResponse</a>") 
		they should return, including the possibility to create custom Groovy scripts for both dispatching and response creation. 
		MockServices can be hosted/run either directly in soapUI or via the command line MockServiceRunner and be invoked from
		any client (including soapUI itself of course) as usual.</div></column><column>
		<img src="images/mocking.gif" alt="Simulated Web Services - Mock Response"/></column></columns>
		<p>Mocking of Web Services opens for a number of interesting usage scenarios:</p>
		<ul>
		<li><b>Client development or testing</b> - create a MockService for an existing contract that returns a number of predictable
		results which can be used by client developers/integrators during the development phase.</li>
		<li><b>Test Driven development from WSDL contract (both server and client)</b> - Starting from only a WSDL, generate both 
		client and server stubs (using any of the soapUI tool integrations) together with a MockService which can be used 
		to build entire functional TestSuites in soapUI	before the actual service implementation is ready.</li>
		<li><b>Web Service rapid prototyping</b> - Quickly create simple WSDL implementations for discovering optimal message exchanges, etc</li>
		<li>etc..</li>
		</ul>
		<p>soapUI Pro further introduces a <a href="../functional/mockresponse.html">MockResponse TestStep</a> which can be added to any functional TestCase to simulate 
		the handling of a SOAP request as part of the test, which opens of testing of asynchronous Web Services, etc.</p>
		
		 <p><hr size="1"/>Next: <a href="getting_started.html">Getting Started with Mock Web Services</a></p>
		</section>
    </body>
</document>

