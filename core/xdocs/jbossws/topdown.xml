<?xml version="1.0"?>
<document>
    <properties>
        <title>JBossWS plugin - implementing</title>
    </properties>
    <body>
		<subsection name="Discontinued">
		<p><b>2007-14-11 : We have decided to discontinue JBoss WS IDE.</b></p>
		<p>2007-14-11 : JBoss WS IDE is as of the 14:th of November 2007 discontinued. This does not mean 
		our support for JBoss WS has ended, we have only chosen to stop producing within JBoss. soapUI will continue its
		strong support for JBoss, just not <b>as</b> JBoss, rather as a independent Open Source software producer.</p>
		<p>Look at our <a href="../userguide/tools/index.html">tools Pages</a> for more info. </p>
		</subsection>
		
		<section name="Implementing Web Services">
		<p>Implementing or consuming a Web Service refers to the process of starting with an existing WSDL 
		contract and then creating the java classes that either fulfill or consume this contract. The  
		WSDL can either be remotely	available over http or a local file in the current project. In either case,
		 the process consists of 4 steps:</p>
		<ol>
		<li>Adding the WSDL to the "JBossWS Web Services" node</li>
		<li>Generating a server-side interfaces classes for implementing the contract</li>
		<li>Implementing the generated interfaces</li>
		<li>Publishing the implemented interface as a Web Service, optionally using the original WSDL and mapping file</li>
		</ol>
		
		<p>Step 1 and 2 above are the same as described under <a href="consume.html">Consuming Web Services</a>, please
		refer to that document for these. Be sure to generate the required JAX-RPC mapping file as it is reused
		in the publish process.</p>
		
		<subsection name="Implementing the interface">
		<p>When generating artifacts as described under <a href="consume.html">Consuming Web Services</a>, a java
		Interface will be generated corresponding to the imported interface. For example when generating for the
		freely available CurrencyConverter available at http://www.webservicex.net/CurrencyConvertor.asmx?WSDL, the 
		following interface is generated for the services SOAP Binding:</p>
		<source>/*
 * JBossWS WS-Tools Generated Source
 *
 * Generation Date: Sat Sep 30 15:27:28 CEST 2006
 *
 * This generated source code represents a derivative work of the input to
 * the generator that produced it. Consult the input for the copyright and
 * terms of use that apply to this source code.
 */
package test;

public interface CurrencyConvertorSoap extends java.rmi.Remote {

	public test.ConversionRateResponse conversionRate(
			test.ConversionRate conversionRate) throws java.rmi.RemoteException;
}</source>
		<p>Now implement this interface in a java class:</p>
		<source>package test.impl;

import java.rmi.RemoteException;

import test.ConversionRate;
import test.ConversionRateResponse;
import test.CurrencyConvertorSoap;

public class CurrencyConverterSoapImpl implements CurrencyConvertorSoap {

	public ConversionRateResponse conversionRate(ConversionRate conversionRate)
			throws RemoteException {
		return new ConversionRateResponse(0.0);
	}
}</source>
		</subsection>
		
		<subsection name="Publishing the implementation">
		<p>Once implemented, publish the Web Service as described in the <a href="bottomup.html">Publish</a> 
		document. Since you have already generated a mapping file during the "consume" process and the 
		WSDL is publically available, you should specify to reuse the created mapping file and uncheck the 
		option to import the WSDL into the JBossWS Project:</p>
		<p align="center"><img src="images/implement_override.gif" alt="publishing the web service"/></p>
		<p>If you have the WSDL locally, you can select to use it instead and must also specify the 
		wsdl port to use.</p>
		</subsection>
		
		<p><hr size="1"/>Next: <a href="annotations.html">Generating Web Service Annotations</a></p>
		</section>
    </body>
</document>
