<?xml version="1.0"?>
<document>
    <properties>
        <title>JBossWS plugin - annotations</title>
    </properties>
    <body>
    
        <subsection name="Discontinued">
		<p><b>2007-14-11 : We have decided to discontinue JBoss WS IDE.</b></p>
		<p>2007-14-11 : JBoss WS IDE is as of the 14:th of November 2007 discontinued. This does not mean 
		our support for JBoss WS has ended, we have only chosen to stop producing within JBoss. soapUI will continue its
		strong support for JBoss, just not <b>as</b> JBoss, rather as a independent Open Source software producer.</p>
		<p>Look at our <a href="../userguide/tools/index.html">tools Pages</a> for more info. </p>
		</subsection>
		
		<section name="Web Service Annotations">
		<p>The JBossWS plugin contains functionality for easily adding JSR-181 Web Service annotations to 
		existing Java code.</p> 
		<p>Start by enabling the JBossWS nature and by selecting the 
		"JBossWS - Add Web Service Annotations" option from the desired Java classes right-button menu:</p>
		<p align="center"><img src="images/annotate_menu.gif" alt="web service annotations soap test"/></p>
		<p>This will open the following dialog:</p>
		<p align="center"><img src="images/annotate_dialog.gif" alt="Adding web service annotations"/></p>
		<p>The contained options map directly to the service/binding level annotations available in the 
		JSR-181 specification. Once the desired options have been set, select the Generate option which 
		will add the corresponding annotations to the underlying Java file, for example:</p>
		<source>package ole.test;

import java.util.Arrays;

@javax.jws.soap.SOAPBinding(parameterStyle = javax.jws.soap.SOAPBinding.ParameterStyle.BARE)
@javax.jws.WebService(name="TestImpl", targetNamespace="urn:ole.test", serviceName="TestImplService")
class TestImpl implements Test 
{
	@javax.jws.WebMethod()
	public String toUpperCase(String str) 
	{
		return str.toUpperCase();
	}

	@javax.jws.WebMethod()
	public String toLowerCase(String str) 
	{
		return str.toLowerCase();
	}
}</source>
		<p>Currently, the JBossWS plugin does not support configuring annotations on a method level, 
		standard @WebMethod annotations are added to all methods.</p>
		<subsection name="Deployment">
		<p>Deploy the annotated class in a standard jar archive using the JBossIDE packaging,
		standard Eclipse/WTP packaging features, or any other desired procedure (ANT, Maven, etc..).</p>
		</subsection>
		<p><hr size="1"/>Next: <a href="../intelliJ/index.html">Working with JBoss WS</a></p>
		</section>
    </body>
</document>
