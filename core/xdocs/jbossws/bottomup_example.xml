<?xml version="1.0"?>
<document>
    <properties>
        <title>JBossWS plugin - publish example</title>
    </properties>
    <body>
		
		<subsection name="Discontinued">
		<p><b>2007-14-11 : We have decided to discontinue JBoss WS IDE.</b></p>
		<p>2007-14-11 : JBoss WS IDE is as of the 14:th of November 2007 discontinued. This does not mean 
		our support for JBoss WS has ended, we have only chosen to stop producing within JBoss. soapUI will continue its
		strong support for JBoss, just not <b>as</b> JBoss, rather as a independent Open Source software producer.</p>
		<p>Look at our <a href="../userguide/tools/index.html">tools Pages</a> for more info. </p>
		</subsection>
		
		<section name="Publishing POJO Web Service - Walkthrough Example">
		<p>The following example gives a complete walkthrough of how to implement and deploy a Web Service
		with the JBossWS plugin. The development environment is as follows:</p>
		<ul>
		<li>The <a href="http://labs.jboss.com/portal/jbosside/download/index.html">JBossIDE-2.0.0-beta2</a> release</li>
		<li>JBoss 4.0.4-GA with EJB3 profile</li>
		<li>JBossWS 1.0.3</li>
		</ul>
		<p>Start by installing the above and setting the path to the wstools script as described 
		in the <a href="index.html#Installation">Overview</a>.</p>
		
		<subsection name="Create the project">
		<p>Create a standard empty Java project; </p>
		<p align="center"><img src="images/publish/create_project.gif"/></p>
		<p>Add a source folder for our Java code:</p>
		<p align="center"><img src="images/publish/create_source_folder.gif"/></p>
		<p>Add a package for our classes:</p>
		<p align="center"><img src="images/publish/create_package.gif"/></p>
		</subsection>
		
		<subsection name="Create and Implement the Service Interface">
		<p>Create a simple IHelloWorld interface:</p>
		<source>package jbosstest;

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface IHelloWorld extends Remote
{
	public String sayHello( String subject ) throws RemoteException;
}</source>
		<p>(JBossWS requires webservice classes to extend Remote and all web service methods to throw RemoteException)</p>
		<p>Implement the interface:</p>
		<source>package jbosstest;

public class HelloWorld implements IHelloWorld 
{
	public String sayHello(String subject) 
	{
		return "Hello " + subject + "!";
	}
}</source>
		</subsection>
		
		<subsection name="Enabled the JBossWS Nature">
		<p>Before we can use the plugin we need to enable the JBossWS Nature as described in 
		<a href="gettingstarted.html">Getting Started</a>;</p>
		<p align="center"><img src="images/publish/enable_nature.gif"/></p>
		<p>Once enabled, the project structure should be as follows (in the Project Explorer View):</p>
		<p align="center"><img src="images/publish/project_state_1.gif"/></p>
		</subsection>
		
		<subsection name="Run the Publish Feature">
		<p>Now we can publish our Web Service; right-click on the HelloWorld class and select 
		"JBossWS / Publish as Web Service", which will open the "Publish" dialog as described
		in <a href="bottomup.html">Publishing Web Services</a>:</p>
		<p align="center"><img src="images/publish/publish_tab_1.gif"/></p>
		<p>Most settings can be left at their default; just set the style to "rpc" and then 
		select the advanced tab;</p>
		<p align="center"><img src="images/publish/publish_tab_2.gif"/></p>
		<p>Here just select the "HelloWorld.war" entry from Package drop-down. Now select the
		Generate button, which will start generation of the project:</p>
		<p align="center"><img src="images/publish/wstools_output.gif"/></p>
		<p>After the generation has finished, packaging will be run which will be visible in another
		console window:</p>
		<p align="center"><img src="images/publish/packaging_output.gif"/></p>
		<p>After these steps, the project state should now be as follows:</p>
		<p align="center"><img src="images/publish/project_state_2.gif"/></p>
		</subsection>
		
		<subsection name="Deploy Locally">
		<p>Now all that is left is to deploy the generated WAR-file to our local JBoss server; 
		right-click the generated HelloWorld.war file and select "Run as / Run on Server" and then 
		select your locally configured and running JBoss installation. You should get a deployment 
		log in the servers console:</p>
		<p align="center"><img src="images/publish/deploy_output.gif"/></p>
		</subsection>
		
		<subsection name="Test">
		<p>Double-click the previously generated "Request 1" entry under the "sayHello" node in 
		the Project Explorer, this will open a SOAP request editor:</p>
		<p align="center"><img src="images/publish/request_editor.gif"/></p>
		<p>Change the '?' to 'Marc', save the request (CTRL-S) and press the green arrow in the 
		toolbar for sending the request to the local Web Service. You will get the response in a
		new editor tab:</p>
		<p align="center"><img src="images/publish/response_editor.gif"/></p>
		
		</subsection>
		<p><hr size="1"/>Next: <a href="consume.html">Consuming a Web Service</a></p>
		</section>
    </body>
</document>
