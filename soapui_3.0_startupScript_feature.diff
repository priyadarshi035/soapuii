Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/WsdlTestSuite.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/WsdlTestSuite.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/WsdlTestSuite.java	(wersja 12851)
@@ -33,6 +33,8 @@
 import com.eviware.soapui.impl.wsdl.testcase.WsdlTestSuiteRunner;
 import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestStep;
 import com.eviware.soapui.model.ModelItem;
+import com.eviware.soapui.model.propertyexpansion.DefaultPropertyExpansionContext;
+import com.eviware.soapui.model.propertyexpansion.PropertyExpansionContext;
 import com.eviware.soapui.model.support.ModelSupport;
 import com.eviware.soapui.model.testsuite.TestCase;
 import com.eviware.soapui.model.testsuite.TestSuite;
@@ -47,6 +49,7 @@
 import com.eviware.soapui.support.scripting.SoapUIScriptEngineRegistry;
 import com.eviware.soapui.support.types.StringToObjectMap;
 
+import org.apache.log4j.Logger;
 /**
  * TestSuite implementation for WSDL projects.
  * 
@@ -57,6 +60,7 @@
 {
 	public final static String SETUP_SCRIPT_PROPERTY = WsdlTestSuite.class.getName() + "@setupScript";
 	public final static String TEARDOWN_SCRIPT_PROPERTY = WsdlTestSuite.class.getName() + "@tearDownScript";
+	public static final String RUN_SUITE_STARTUP_IN_TEST_CASE  = WsdlTestCase.class.getName() + "@run_suite_startup_in_test_case";
 
 	private final WsdlProject project;
 	private List<WsdlTestCase> testCases = new ArrayList<WsdlTestCase>();
@@ -64,7 +68,10 @@
 	private Set<TestSuiteRunListener> testSuiteRunListeners = new HashSet<TestSuiteRunListener>();
 	private SoapUIScriptEngine setupScriptEngine;
 	private SoapUIScriptEngine tearDownScriptEngine;
+	private boolean AlreadyLaunched = false;
 
+	private final static Logger log = Logger.getLogger( WsdlTestSuite.class );
+
 	public WsdlTestSuite( WsdlProject project, TestSuiteConfig config )
 	{
 		super( config, project, "/testSuite.gif" );
@@ -493,9 +500,33 @@
 		setupScriptEngine.setVariable( "context", context );
 		setupScriptEngine.setVariable( "testSuite", this );
 		setupScriptEngine.setVariable( "log", SoapUI.ensureGroovyLog() );
+		log.info("Running SetupScript from the level of TestSuite");
 		return setupScriptEngine.run();
 	}
 
+	public Object runSetupScript( PropertyExpansionContext context ) throws Exception
+	{
+		String script = getSetupScript();
+		if( StringUtils.isNullOrEmpty( script ) )
+			return null;
+
+		if( setupScriptEngine == null )
+		{
+			setupScriptEngine = SoapUIScriptEngineRegistry.create( this );
+			setupScriptEngine.setScript( script );
+		}
+
+		if( context == null )
+			context = new DefaultPropertyExpansionContext( this );
+
+		setupScriptEngine.setVariable( "context", context );
+		setupScriptEngine.setVariable( "testSuite", this );
+		setupScriptEngine.setVariable( "log", SoapUI.ensureGroovyLog() );
+		log.info("Running SetupScript from the level of TestSuite in a fake way");
+		return setupScriptEngine.run();
+	}
+
+
 	public Object runTearDownScript( TestSuiteRunContext context, TestSuiteRunner runner ) throws Exception
 	{
 		String script = getTearDownScript();
@@ -705,4 +736,26 @@
 
 		setPropertiesConfig( testSuiteConfig.getProperties() );
 	}
+
+	public boolean isRunSuiteStartupInTestCase ()
+	{
+		return getSettings().getBoolean( RUN_SUITE_STARTUP_IN_TEST_CASE );
+	}
+
+	public void setRunSuiteStartupInTestCase( boolean runSuitStartupInTestCase )
+	{
+		boolean old = getSettings().getBoolean( RUN_SUITE_STARTUP_IN_TEST_CASE );
+		getSettings().setBoolean( RUN_SUITE_STARTUP_IN_TEST_CASE, runSuitStartupInTestCase );
+		notifyPropertyChanged( RUN_SUITE_STARTUP_IN_TEST_CASE, old, runSuitStartupInTestCase );
+	}
+
+	public void setAlreadyLaunched(boolean AlreadyLaunched)
+	{
+		this.AlreadyLaunched = AlreadyLaunched;
+	}
+
+	public boolean getAlreadyLaunched()
+	{
+		return AlreadyLaunched;
+	}
 }
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testcase/WsdlTestCaseDesktopPanel.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testcase/WsdlTestCaseDesktopPanel.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testcase/WsdlTestCaseDesktopPanel.java	(wersja 12851)
@@ -86,6 +86,7 @@
 import com.eviware.soapui.support.types.StringToObjectMap;
 import com.eviware.soapui.ui.support.ModelItemDesktopPanel;
 
+import org.apache.log4j.Logger;
 /**
  * WsdlTestCase desktop panel
  * 
@@ -117,6 +118,8 @@
 	private JButton createLoadTestButton;
 	private JInspectorPanel inspectorPanel;
 
+	private final static Logger log = Logger.getLogger( WsdlTestCaseDesktopPanel.class );
+
 	public WsdlTestCaseDesktopPanel( WsdlTestCase testCase )
 	{
 		super( testCase );
@@ -530,6 +533,7 @@
 
 	protected void beforeRun()
 	{
+		getModelItem().setAlreadyLaunched(true);
 	}
 
 	protected void afterRun()
@@ -537,6 +541,7 @@
 		runButton.setEnabled( true );
 		cancelButton.setEnabled( false );
 		testStepList.setEnabled( true );
+		getModelItem().setAlreadyLaunched(false);
 	}
 
 	private class SetupScriptGroovyEditorModel extends AbstractGroovyEditorModel
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuiteDesktopPanel.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuiteDesktopPanel.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuiteDesktopPanel.java	(wersja 12851)
@@ -66,6 +66,8 @@
 import com.eviware.soapui.support.types.StringToObjectMap;
 import com.eviware.soapui.ui.support.ModelItemDesktopPanel;
 
+import org.apache.log4j.Logger;
+
 /**
  * DesktopPanel for WsdlTestSuite
  * 
@@ -92,6 +94,8 @@
 	private JInspectorPanel inspectorPanel;
 	private WsdlTestSuiteRunner testSuiteRunner;
 
+	private final static Logger log = Logger.getLogger( WsdlTestSuiteDesktopPanel.class );
+
 	public WsdlTestSuiteDesktopPanel( WsdlTestSuite testSuite )
 	{
 		super( testSuite );
@@ -345,6 +349,7 @@
 		cancelAction.setEnabled( testSuiteRunner != null );
 		testCaseList.setEnabled( false );
 		progressBar.setForeground( Color.GREEN.darker() );
+		getModelItem().setAlreadyLaunched(true);
 	}
 
 	protected void afterRun( WsdlTestSuiteRunner testSuiteRunner )
@@ -352,6 +357,7 @@
 		runAction.setEnabled( true );
 		cancelAction.setEnabled( false );
 		testCaseList.setEnabled( true );
+		getModelItem().setAlreadyLaunched(false);
 
 		progressBar.setString( String.valueOf( testSuiteRunner.getStatus() ) );
 		progressBar.setForeground( testSuiteRunner.isFailed() ? Color.RED : Color.GREEN.darker() );
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuitePanelBuilder.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuitePanelBuilder.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/panels/testsuite/WsdlTestSuitePanelBuilder.java	(wersja 12851)
@@ -46,6 +46,7 @@
 		JPropertiesTable<WsdlTestSuite> table = new JPropertiesTable<WsdlTestSuite>( "TestSuite Properties", modelItem );
 
 		table.addProperty( "Name", "name", true );
+		table.addProperty( "Run TestSuite Startup Script On Startup Of TestCase", "runSuiteStartupInTestCase", JPropertiesTable.BOOLEAN_OPTIONS );
 
 		table.setPropertyObject( modelItem );
 
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCase.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCase.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCase.java	(wersja 12851)
@@ -81,6 +81,7 @@
 	private final boolean forLoadTest;
 	private SoapUIScriptEngine setupScriptEngine;
 	private SoapUIScriptEngine tearDownScriptEngine;
+	private boolean AlreadyLaunched = false;
 
 	public WsdlTestCase( WsdlTestSuite testSuite, TestCaseConfig config, boolean forLoadTest )
 	{
@@ -838,6 +839,7 @@
 		setupScriptEngine.setVariable( "context", runContext );
 		setupScriptEngine.setVariable( "testRunner", runner );
 		setupScriptEngine.setVariable( "log", SoapUI.ensureGroovyLog() );
+		logger.info("Running SetupScript from the level of TestCase");
 		return setupScriptEngine.run();
 	}
 
@@ -993,4 +995,13 @@
 		return WsrmUtils.getWsrmVersionNamespace( getConfig().getWsrmVersion() );
 	}
 
+	public void setAlreadyLaunched(boolean AlreadyLaunched)
+	{
+		this.AlreadyLaunched = AlreadyLaunched;
+	}
+
+	public boolean getAlreadyLaunched()
+	{
+		return AlreadyLaunched;
+	}
 }
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCaseRunner.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCaseRunner.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestCaseRunner.java	(wersja 12851)
@@ -15,6 +15,8 @@
 import java.util.LinkedList;
 import java.util.List;
 
+import org.apache.log4j.Logger;
+
 import org.apache.commons.httpclient.HttpState;
 
 import com.eviware.soapui.SoapUI;
@@ -42,6 +44,7 @@
 	private List<TestStepResult> testStepResults = new LinkedList<TestStepResult>();
 	private int gotoStepIndex;
 	private int resultCount;
+	private final static Logger log = Logger.getLogger( WsdlTestCaseRunner.class );
 	// private HashMap<String, WsrmSequence> wsrmMap;
 
 	// private final static Logger log =
@@ -84,7 +87,19 @@
 			runContext.setProperty( SubmitContext.HTTP_STATE_PROPERTY, new HttpState() );
 		}
 
-		testCase.runSetupScript( runContext, this );
+		boolean alreadyLaunched = testCase.getTestSuite().getAlreadyLaunched();
+		if (testCase.getTestSuite().isRunSuiteStartupInTestCase() == true && alreadyLaunched == false)
+		{
+			log.info("flag is true and setup script from TestSuite wasn't already launched");
+			testCase.getTestSuite().runSetupScript(runContext);
+			testCase.runSetupScript( runContext, this );
+		}
+		else
+		{
+				log.info("flag is flase or setup script from TestSuite was already launched");
+				testCase.runSetupScript( runContext, this );
+		}
+
 		if( !isRunning() )
 			return;
 
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestSuiteRunner.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestSuiteRunner.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/testcase/WsdlTestSuiteRunner.java	(wersja 12851)
@@ -32,6 +32,8 @@
 import com.eviware.soapui.model.testsuite.TestSuite.TestSuiteRunType;
 import com.eviware.soapui.support.types.StringToObjectMap;
 
+import org.apache.log4j.Logger;
+
 /**
  * WSDL TestCase Runner - runs all steps in a testcase and collects performance
  * data
@@ -49,6 +51,8 @@
 	private WsdlTestCase currentTestCase;
 	private TestRunListener parallellTestRunListener = new ParallellTestRunListener();
 
+	private final static Logger log = Logger.getLogger( WsdlTestSuiteRunner.class );
+
 	public WsdlTestSuiteRunner( WsdlTestSuite testSuite, StringToObjectMap properties )
 	{
 		super( testSuite, properties );
@@ -187,7 +191,7 @@
 		{
 			SoapUI.logError( e );
 		}
-		
+
 		notifyAfterRun();
 
 		runContext.clear();
Index: soapuii/src/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlGroovyScriptTestStep.java
===================================================================
--- soapuii/src/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlGroovyScriptTestStep.java	(wersja 12844)
+++ soapuii/src/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlGroovyScriptTestStep.java	(wersja 12851)
@@ -34,6 +34,7 @@
 import com.eviware.soapui.support.scripting.SoapUIScriptEngineRegistry;
 import com.eviware.soapui.support.xml.XmlObjectConfigurationBuilder;
 import com.eviware.soapui.support.xml.XmlObjectConfigurationReader;
+import java.util.logging.Level;
 
 /**
  * TestStep that executes an arbitraty Groovy script
@@ -134,6 +135,22 @@
 		if( log == null )
 			log = logger;
 
+		boolean alreadyLaunchedTestSuite = getTestCase().getTestSuite().getAlreadyLaunched();
+		boolean alreadyLaunchedTestCase = getTestCase().getAlreadyLaunched();
+
+		if (getTestCase().getTestSuite().isRunSuiteStartupInTestCase() == true && alreadyLaunchedTestSuite == false)
+		{
+			if(alreadyLaunchedTestCase == false)
+			{
+				try {
+					getTestCase().getTestSuite().runSetupScript(context);
+					getTestCase().runSetupScript(context, testRunner);
+				} catch (Exception ex) {
+					java.util.logging.Logger.getLogger(WsdlGroovyScriptTestStep.class.getName()).log(Level.SEVERE, null, ex);
+				}
+			}
+		}
+
 		try
 		{
 			if( scriptText.trim().length() > 0 )
